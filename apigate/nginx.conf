
upstream backend {
    server service1:5050;
}
    # Second server block for REST API on port 81 (mapped to 8197 on the host)
    server {
        listen 80 default_server;
        resolver 127.0.0.1 valid=2s;
        include /etc/nginx/mime.types;
        # REST API functionality
        location / {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Log all requests to the REST API
            access_log /var/log/nginx/rest_api.log;
        }
        location /state {
            
            proxy_pass http://backend/state;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Log all requests to the REST API
            access_log /var/log/nginx/rest_api.log;

            # Pass the Authorization header to the backend
            proxy_set_header Authorization $http_authorization;

            # Forward 401 responses
            proxy_intercept_errors on;
            error_page 401 = @auth_error;
        }
    
        location @auth_error {
            add_header WWW-Authenticate 'Basic realm="Restricted Access"';
            return 401;
        }
    }
