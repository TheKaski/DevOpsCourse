version: "3"
services:
  service1:
    build: ./service1
    deploy:
      replicas: 3
    environment:
      - PORT=5050
    depends_on:
      - service2
    networks:
      - service-network
      - loadbalancing
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Mount the Docker socket to run docker commands from the containers

  service2:
    build: ./service2
    networks:
      - service-network

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "8198:80"
      - "8197:81"
    networks:
      - loadbalancing
    depends_on:
      - service1

  test:
    image: python:3.9-slim  # You can use a Python image or any image with the dependencies you need
    depends_on:
      - service1  # Ensure the test container waits for service1 to start
    networks:
      - service-network
    volumes:
      - ./scripts:/scripts  # Mount your local test scripts into the container
    command: ["python", "./scripts/api_tests.py"]  # Command to run the test script

# Network for service communication
networks:
  service-network:
    driver: bridge
  loadbalancing:
    driver: bridge
